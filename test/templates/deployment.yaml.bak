apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-auth-app
  # namespace: terrestrial-platform
spec:
  selector:
    app: spring-auth-app
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: ClusterIP # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: spring-auth-app
spec:
  selector:
    matchLabels:
      app: spring-auth-app
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-auth-app
    spec:
      containers:
        - name: spring-auth-app 
          image: savantripathi22/auth:mar17 # Image that will be used to containers in the cluster and don't forget to add ( :latest ) at the end
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-platform-app
  # namespace: terrestrial-platform
spec:
  selector:
    app: spring-platform-app
  ports:
    - protocol: "TCP"
      port: 8002 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: ClusterIP # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: spring-platform-app
spec:
  selector:
    matchLabels:
      app: spring-platform-app
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-platform-app
    spec:
      containers:
        - name: spring-platform-app 
          image: savantripathi22/platform:mar17_v2
          # Image that will be used to containers in the cluster and don't forget to add ( :latest ) at the end
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
            
---

# apiVersion: v1 # Kubernetes API version
# kind: Service # Kubernetes resource kind we are creating
# metadata: # Metadata of the resource kind we are creating
  # name: spring-alarm-app
  # namespace: terrestrial-platform
# spec:
  # selector:
    # app: spring-alarm-app
  # ports:
    # - protocol: "TCP"
      # port: 8003 # The port that the service is running on in the cluster
      # targetPort: 8080 # The port exposed by the service
  # type: ClusterIP # type of the service. LoadBalancer indicates that our service will be external.
# ---
# apiVersion: apps/v1
# kind: Deployment # Kubernetes resource kind we are creating
# metadata:
  # name: spring-alarm-app
# spec:
  # selector:
    # matchLabels:
      # app: spring-alarm-app
  # replicas: 1 # Number of replicas that will be created for this deployment
  # template:
    # metadata:
      # labels:
        # app: spring-alarm-app
    # spec:
      # containers:
        # - name: spring-alarm-app 
          # image: savantripathi22/alarm:mar17 # Image that will be used to containers in the cluster and don't forget to add ( :latest ) at the end
          # imagePullPolicy: Always
          # ports:
            # - containerPort: 8003
            

# ---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-tag-app
  # namespace: terrestrial-platform
spec:
  selector:
    app: spring-tag-app
  ports:
    - protocol: "TCP"
      port: 8004 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: ClusterIP # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: spring-tag-app
spec:
  selector:
    matchLabels:
      app: spring-tag-app
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-tag-app
    spec:
      containers:
        - name: spring-tag-app 
          image: savantripathi22/tag:feb_15 # Image that will be used to containers in the cluster and don't forget to add ( :latest ) at the end
          imagePullPolicy: Always
          ports:
            - containerPort: 8004
            
            
---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-history-app
  # namespace: terrestrial-platform
spec:
  selector:
    app: spring-history-app
  ports:
    - protocol: "TCP"
      port: 8005 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: ClusterIP # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: spring-history-app
spec:
  selector:
    matchLabels:
      app: spring-history-app
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-history-app
    spec:
      containers:
        - name: spring-history-app 
          image: savantripathi22/history:jan_23 # Image that will be used to containers in the cluster and don't forget to add ( :latest ) at the end
          imagePullPolicy: Always
          ports:
            - containerPort: 8005



















# apiVersion: apps/v1
# kind: Deployment
# metadata:
  # name: example-website  #imp
  # labels:
    # app: website  #mandatory while looking at service 
# spec:
  # replicas: 1
  # selector:
    # matchLabels:
      # app: website
  # template:
    # metadata:
      # labels:
        # app: website
    # spec:
      # containers:
      # - name: website
        # image: savantripathi22/auth-app:latest
        # ports:
        # - containerPort: 8080
        
        
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
  # name: example-platform  #imp
  # labels:
    # app: platform  #mandatory while looking at service 
# spec:
  # replicas: 1
  # selector:
    # matchLabels:
      # app: platform
  # template:
    # metadata:
      # labels:
        # app: platform
    # spec:
      # containers:
      # - name: platform
        # image: savantripathi22/platform-app:latest
        # ports:
        # - containerPort: 8002